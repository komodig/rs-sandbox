version: '3.4'

x-common-variables: &common-variables
  DJANGO_LOG_LEVEL: ${DJANGO_LOG_LEVEL}
  POSTGRES_DB: ${POSTGRES_DB}
  POSTGRES_USER: ${POSTGRES_USER}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  POSTGRES_DB_HOST: ${POSTGRES_DB_HOST}
  POSTGRES_DB_PORT: ${POSTGRES_DB_PORT}
  SECRET_KEY: ${SECRET_KEY}
  ADMIN_USERNAME: ${ADMIN_USERNAME}
  ADMIN_EMAIL: ${ADMIN_EMAIL}
  ADMIN_PASSWD: ${ADMIN_PASSWD}
  SENTRY_DSN: ${SENTRY_DSN}

services:
  backend:
    build:
      context: .
      args:
        - 'RUN_DEV=1'
        - 'ENV_USER=root'
    volumes:
      - '.:/srv/www'
    depends_on:
      - 'backend-db'
    environment:
      <<: *common-variables
    command: ["sh", "bin/docker/start.sh"]
    networks:
      - 'global_network'
    restart: always

  backend-db:
    container_name: ${POSTGRES_DB_HOST}
    image: 'postgres:12.1'
    volumes:
      - 'db-data:/var/lib/postgresql/data'
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_DB_EXTERNAL_PORT}:5432"
    networks:
      - 'global_network'

  backend-nginx:
    image: 'nginx:1.17'
    container_name: ${NGINX_HOST}
    volumes:
      - './nginx/default.conf:/etc/nginx/conf.d/default.conf'
    depends_on:
      - 'backend-db'
      - 'backend'
    ports:
      - "${NGINX_PORT}:8000"
    networks:
      - 'global_network'

volumes:
  db-data:
    driver: 'local'

networks:
  global_network:
    external: true
